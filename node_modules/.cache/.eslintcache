[{"C:\\Bank Profile Project\\my-app\\src\\index.tsx":"1","C:\\Bank Profile Project\\my-app\\src\\App.tsx":"2","C:\\Bank Profile Project\\my-app\\src\\pages\\dashboard.tsx":"3","C:\\Bank Profile Project\\my-app\\src\\components\\Navigation.tsx":"4","C:\\Bank Profile Project\\my-app\\src\\pages\\Dashboard.tsx":"5","C:\\Bank Profile Project\\my-app\\src\\pages\\Reports.tsx":"6","C:\\Bank Profile Project\\my-app\\src\\api\\config.tsx":"7","C:\\Bank Profile Project\\my-app\\src\\components\\Profile.tsx":"8","C:\\Bank Profile Project\\my-app\\src\\pages\\Layout.tsx":"9","C:\\Bank Profile Project\\my-app\\src\\pages\\ProfileDetails.tsx":"10"},{"size":275,"mtime":1650578125641,"results":"11","hashOfConfig":"12"},{"size":1268,"mtime":1650784674342,"results":"13","hashOfConfig":"12"},{"size":255,"mtime":1650583372397,"results":"14","hashOfConfig":"12"},{"size":578,"mtime":1650732946310,"results":"15","hashOfConfig":"12"},{"size":1221,"mtime":1650733809410,"results":"16","hashOfConfig":"12"},{"size":1167,"mtime":1650734495717,"results":"17","hashOfConfig":"12"},{"size":77,"mtime":1650641981435,"results":"18","hashOfConfig":"12"},{"size":1713,"mtime":1650786056039,"results":"19","hashOfConfig":"12"},{"size":674,"mtime":1650734658593,"results":"20","hashOfConfig":"12"},{"size":2786,"mtime":1650786032505,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},"1go1nxo",{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"25"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},"C:\\Bank Profile Project\\my-app\\src\\index.tsx",[],[],[],"C:\\Bank Profile Project\\my-app\\src\\App.tsx",["57"],[],"import { useEffect } from 'react';\nimport 'antd/dist/antd.css';\nimport './App.css';\nimport {API_URL} from './api/config'\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Route,\n} from \"react-router-dom\";\nimport { Dashboard } from './pages/Dashboard';\nimport { Reports } from './pages/Reports';\nimport { ProfileDetails } from './pages/ProfileDetails';\n\nfunction App() {\n\n  // fetch api data and push them in the local storage\n  // you can change the api url in the \"src/api/config\" file\n  // the below function load once when the applicatin run\n  useEffect(() => {\n    localStorage.clear();\n    fetch(process.env.REACT_APP_BASE_URL + \"/users/1\" ,{method:'GET'})\n    .then(res => res.json())\n    .then(\n      (result) => {\n          localStorage.setItem('UserProfile', JSON.stringify(result));\n      },\n      (error) => {\n          console.log(error)\n      }\n    )\n   }, []);\n  \n  return (\n    //Router configuration\n    //to add new router in the application\n    <div className=\"App\">\n      <Router>\n        <Routes>\n          <Route path='/' element={<Dashboard />} />\n          <Route path='/reports' element={<Reports />} />\n          <Route path='/profile' element={<ProfileDetails />} />\n        </Routes>\n      </Router>    \n    </div>\n  );\n}\n\nexport default App;\n","C:\\Bank Profile Project\\my-app\\src\\pages\\dashboard.tsx",[],[],"C:\\Bank Profile Project\\my-app\\src\\components\\Navigation.tsx",[],[],"C:\\Bank Profile Project\\my-app\\src\\pages\\Dashboard.tsx",[],[],"C:\\Bank Profile Project\\my-app\\src\\pages\\Reports.tsx",[],[],"C:\\Bank Profile Project\\my-app\\src\\api\\config.tsx",[],[],[],"C:\\Bank Profile Project\\my-app\\src\\components\\Profile.tsx",["58"],[],"// this is the profile component\r\n// this component is rendered in the sidebar\r\n// display name, email and profile picture\r\n\r\nimport { Button } from \"antd\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport profile from '../images/profile.jpg';\r\n\r\nexport interface iProfileData {\r\n    name: string;\r\n    email: string;\r\n    phone?: number;\r\n    address?: iAddress;\r\n    website?: string;\r\n}\r\n\r\ninterface iAddress {\r\n    city: string;\r\n    street: string\r\n}\r\n\r\nconst Profile = () => {\r\n    // the below code is to handle the redirection to the profile page\r\n    let navigate = useNavigate();\r\n    const routeChange = () => {\r\n        let path = '/profile';\r\n        navigate(path);\r\n    }\r\n\r\n    // this is the state of the component\r\n    const [profileCard, setProfileCard] = useState<iProfileData>({ name: '', email: '' });\r\n\r\n    //the below function is to get the profile data from the local storage\r\n    //it updates the state to render the updated component\r\n    useEffect(() => {\r\n        const items = JSON.parse(localStorage.getItem('UserProfile')!);\r\n        setProfileCard(profileCard => ({\r\n            ...profileCard,\r\n            ...items\r\n        }));\r\n    })\r\n\r\n\r\n    return (\r\n        <div className=\"profileContainer\">\r\n            <div className=\"profileImage\">\r\n                <img src={profile} alt=\"profile\" />\r\n            </div>\r\n            <div className=\"profileName\">{profileCard.name}</div>\r\n            <div className=\"profileEmail\">{profileCard.email}</div>\r\n            <div className=\"viewProfile\"><Button onClick={routeChange} type=\"primary\">View Profile</Button></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;\r\n\r\n","C:\\Bank Profile Project\\my-app\\src\\pages\\Layout.tsx",[],[],"C:\\Bank Profile Project\\my-app\\src\\pages\\ProfileDetails.tsx",["59"],[],"// this is the profile details page\r\nimport { Row, Col } from 'antd';\r\nimport { useEffect, useState } from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport '../App.css';\r\nimport profile from '../images/profile.jpg';\r\n\r\nimport { Layout } from 'antd';\r\nimport { PageLayout } from './Layout';\r\nimport { iProfileData } from '../components/Profile';\r\n\r\nconst {Content } = Layout;\r\n\r\n\r\nexport const ProfileDetails = () => {\r\n    // this is the component states\r\n    const [profileCard, setProfileCard] = useState<iProfileData>({ name: '', phone: 0, email: '', website: '', address: { city: '', street: '' } });\r\n    //const [address, setAddress] = useState({ city: '', street: '' })\r\n\r\n    // here to get the profile data from local storage\r\n    // it updates the component state to render the component\r\n    useEffect(() => {\r\n        const items = JSON.parse(localStorage.getItem('UserProfile')!);\r\n        setProfileCard(profileCard => ({\r\n            ...profileCard,\r\n            ...items\r\n        }));        \r\n    })\r\n    return <PageLayout children={<Content>\r\n        <div className='MainHeader'>\r\n            <h2>Profile</h2>\r\n        </div>\r\n        <div className='profileMainContainer'>\r\n            <Row>\r\n                <Col className='imageRow' span={24}>\r\n                    <img src={profile} className='imageDetails'  alt=\"profile\" />\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col span={12}>\r\n                    <label className='labeClass'>Name</label>\r\n                    <div className='labelData'>{profileCard.name}</div>\r\n                </Col>\r\n                <Col span={12}>\r\n                    <label className='labeClass'>Phone</label>\r\n                    <div className='labelData'>{profileCard.phone ? profileCard.phone : \"\"}</div>\r\n                </Col>\r\n                <Col span={12}>\r\n                    <label className='labeClass'>Email</label>\r\n                    <div className='labelData'>{profileCard.email}</div>\r\n                </Col>\r\n                <Col span={12}>\r\n                    <label className='labeClass'>Website</label>\r\n                    <div className='labelData'>{profileCard.website ? profileCard.website : \"\"}</div>\r\n                </Col>\r\n                <Col span={12}>\r\n                    <label className='labeClass'>Address</label>\r\n                    <div className='labelData'>{profileCard.address ? profileCard.address.city : \"\"}</div>\r\n                </Col>\r\n                <Col span={12}>\r\n                    <label className='labeClass'>Streed</label>\r\n                    <div className='labelData'>{profileCard.address ? profileCard.address.street : \"\"}</div>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    </Content>\r\n\r\n    } />;\r\n\r\n}\r\n\r\n\r\n\r\n\r\n",{"ruleId":"60","severity":1,"message":"61","line":4,"column":9,"nodeType":"62","messageId":"63","endLine":4,"endColumn":16},{"ruleId":"64","severity":1,"message":"65","line":36,"column":5,"nodeType":"62","endLine":36,"endColumn":14,"suggestions":"66"},{"ruleId":"64","severity":1,"message":"65","line":22,"column":5,"nodeType":"62","endLine":22,"endColumn":14,"suggestions":"67"},"@typescript-eslint/no-unused-vars","'API_URL' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setProfileCard'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [] as a second argument to the useEffect Hook.",["68"],["69"],{"desc":"70","fix":"71"},{"desc":"70","fix":"72"},"Add dependencies array: []",{"range":"73","text":"74"},{"range":"75","text":"74"},[1225,1225],", []",[1013,1013]]